"""
Module to define the schema of output generated by LLM
"""
import sys
import logging
from langchain.output_parsers import ResponseSchema
from langchain.output_parsers import StructuredOutputParser

logger = logging.getLogger(__name__)

class AdvisorySchema:
    """
    Schema class for output of LLM
    """
    def __init__(self):
        self.summary_schema = ResponseSchema(name="summary",
                                description="Generate the concise summary of the of the"
                                  "news item from the given context and rewrite the article summary.")
        self.sentiment_schema = ResponseSchema(name="sentiment",
                                        description="Identify the overall sentiment of the content,"
                                            "whether itâ€™s positive, negative, or neutral.")
        self.keyword_schema = ResponseSchema(name="matched_keyword_list",
                                        description="Python List of matching keywords from"
                                        "the content based on a list of keywords provided.")
    def response_schema(self):
        """
        Response schema format for LLM
        """
        try:
            response_schemas = [self.summary_schema,
                        self.sentiment_schema,
                        self.keyword_schema]

            output_parser = StructuredOutputParser.from_response_schemas(response_schemas)

            format_instructions = output_parser.get_format_instructions()
            return format_instructions,output_parser
        except Exception as e:
            exc_type, exc_obj, exc_tb = sys.exc_info()
            logger.error(f"Error in generating response schema for LLM. Line No:"
             f"{exc_tb.tb_lineno}  Error: {str(e)}", stack_info=True)
